# SPDX-License-Identifier: BSD-3-Clause
# Copyright 2020 NXP

/*********************************************************/
QOS DEMO Application

Qos-demo is a DPDK sample application, using it user can test the 2-level
scheduling and shaping feature of CEETM. Traffic distribution on TX side is
based on the values of VLAN header present in the packet. Application chooses
Level1 Scheduler based on VLAN ID and Class Queue based on priority field of
VLAN header.


/*********************************************************/
SUPPORTED FEATURES:

* Many Level2 and many Level1 schedulers can be configured. Resources
  availability depends upon the MC DPC file.
* 8 Class queue per Level1 scheduler are supported.
* User can configure STRICT/WRR scheduling on Level1 and
  Shaper (CIR /EIR) on Level1 and Level2.
* Dynamic switching of one Level1 instance from one Level2 instance to another Level2 instance.
* Dynamic switching of SP to WRR and vice versa


/*********************************************************/
DPDK Compilation:

Please refer LSDK document for DPDK compilation.


/*********************************************************/
APPLICATION COMPILATION CMD:

make -C examples/qos-demo/


/*********************************************************/
PREREQUISITES:
* Port links should be up before running "qos-demo".
* dynamic_dpl.sh script to create required resources.

/*********************************************************/
EXECUTION COMMANDS:

. ./dynamic_dpl.sh dpmac.5 dpmac.6
./qos-demo -c 0x7 -- -p 0x3 –f “./input.data”

-c is coremask, Please note that number of cores in coremask must be
	equal to number of ports plus 1 extra core 0.
	core 0 is required for command prompt, so it must be present in coremask.
-p is port mask
-f is input file name of QoS data


/*********************************************************/
CMDline help:

On executing qos-demo application, user will see a command line prompt with symbol "==>",
where user can give some commands to the application at run-time.
Below are some supported commands:

q			: Quit the application
qos			: Print all QoS data
buffers			: Available buffers count
move <l1_id> <l2_id>	: Move one L1 instance from one L2 to another L2 instance,
			where l1_id and l2_id both must exist in the application,
			e.g: move 0 1 : It will attach L1 instance whose ID is 0 to
			to L2 instance whose ID is 1.
sched <l1_id> STRICT/WRR <weight>	:
			Switching scheduling from SP to WRR and WRR to SP
			on Level1 dynamically.
			e.g sched 0 STRICT
			sched 0 WRR 100,200,300


/*********************************************************/
QoS data file Description:

Level 1 scheduler and Level 2 scheduler data will be identified by application using
keywords "L1" and "L2" respectively. All the data (in keyword = value pairs) after any
of these keywords will belong to the same Scheduler till next "L1", "L2" keyword or
end of file.
To specify L1 scheduler data, first keyword must be "L1", similarly for L2 scheduler,
first keyword must be "L2". Data should be given in “keyword=value” form, where value
must be in the next line.

######################### L1 Scheduler keywords description: #####################
ID	: Unique ID within Level 1 schedulers, starting from 0.
CIR	: Committed information rate, in Mbps.
CIR_SIZE: CIR burst size in Kbps.
EIR	: Excess information rate, in Mbps.
EIR_SIZE: EIR burst size in Kbps.
COUPLED	: Use Commit and Excess rate shaper in coupled manner. 1 mean coupled and 0 mean non-coupled.
CQ_COUNT: Number of class queues.
MODE	: STRICT or WRR.
WEIGHT	: Valid in case mode is "WRR". values must be comma separated and equal to CQ_COUNT.
	Accepted range is 100 - 24800.
L2_ID	: ID of L2 scheduler to which it will be attached.


############################ L2 Scheduler keywords description: #####################
ID	: Unique ID within Level 2 schedulers, starting from 0
CIR	: Committed information rate, in Mbps.
CIR_SIZE: CIR burst size in Kbps.
EIR	: Excess information rate, in Mbps.
EIR_SIZE: EIR burst size in Kbps.
COUPLED	: Use Commit and Excess rate shaper in coupled manner (1 or 0)
PORT_IDX: port index (refer -p option of command line)

########################### Congestion management ####################################
TAILDROP_TH: Tail-drop threshold value in number of packets.
	     Tail-Drop will be applicable on each CQ configured in the system.
